# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/media/xilinx/xlnx,v-tpg.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Xilinx Test Pattern Generator IP.

maintainers:
  - Kunal Rane <kunal.rane@amd.com>

description: |
  The Xilinx TPG IP is used generate different live video test patterns
  for different video resolutions and video color formats. One can also
  generate video patterns for different pixels per clock.

properties:
  compatible:
    items:
      - enum:
          - xlnx,v-tpg-8.2
          - xlnx,v-tpg-8.0

  reg:
    maxItems: 1

  clocks:
    description: Reference to video core clock.
    maxItems: 1

  clock-names:
    items:
      - const: ap_clk

  xlnx,ppc:
    description: Pixels per clock.
    allOf:
      - $ref: /schemas/types.yaml#/definitions/uint16
      - enum: [1, 2, 4, 8]

  xlnx,vtc:
    description: Maximum number of pixels in a line.
    maxItems: 1

  reset-gpios:
    maxItems: 1
    description: Should contain GPIO reset phandle

  ports:
    type: object

    properties:
      "#address-cells":
        const: 1

      "#size-cells":
        const: 0

      port@0:
        type: object
        description: |
          Input/sink port node, describing module connected to the
          input of Demosaic IP.

        properties:
          reg:
            description: |
              Input/sink port number.
            const: 0

          xlnx,video-format:
            $ref: /schemas/types.yaml#/definitions/uint16
            description: |
              Video format details for input and output port.
              The possible values are -
              0 - RGB
              1 - YUV444
              2 - YUV422
              3 - YUV420
            anyOf:
              - enum: [0, 1, 2, 3] 

          xlnx,video-width:
            $ref: /schemas/types.yaml#/definitions/uint16
            description: |
              The video with to which input and output pads
              of the VPSS IP are set.
            anyOf:
              - enum: [8, 10, 12, 16] 

          endpoint:
            type: object

            properties:
              remote-endpoint: true

            required:
              - remote-endpoint

            additionalProperties: false

        required:
            - reg
            - xlnx,video-format
            - xlnx,video-width   
            - endpoint

        additionalProperties: false

      "port@1":
        type: object
        description: |
          Output/source port node, describing module connected to the
          output.

        properties:
          reg:
            description: |
              Output/source port number.
            const: 1

          xlnx,video-format:
            $ref: /schemas/types.yaml#/definitions/uint16
            description: |
              Video format details for input and output port.
              The possible values are 
              0 - RGB
              1 - YUV444
              2 - YUV422
              3 - YUV420
            anyOf:
              - enum: [0, 1, 2, 3] 
  

          xlnx,video-width:
            $ref: /schemas/types.yaml#/definitions/uint16
            description: |
              The video with to which input and output pads
              of the VPSS IP are set.
            anyOf:
              - enum: [8, 10, 12, 16] 

          endpoint:
            type: object

            properties:
              remote-endpoint: true

            required:
              - remote-endpoint

            additionalProperties: false

        required:
          - reg
          - xlnx,video-format
          - xlnx,video-width   
          - endpoint

        additionalProperties: false

    required:
      - "#address-cells"
      - "#size-cells"
      - port@0
      - port@1

    additionalProperties: false

required:
  - compatible
  - reg
  - clocks
  - clock-names
  - xlnx,ppc
  - xlnx,vtc
  - reset-gpios
  - ports

additionalProperties: false

examples:
  - |
    tpg_0: tpg@40050000 {
        compatible = "xlnx,v-tpg-5.0";
        reg = <0x40050000 0x10000>;
        clocks = <&clkc 15>;
        clock-names = "ap_clk";
        xlnx,ppc = <2>;
        xlnx,vtc = <&vtc_3>;
        reset-gpios = <&gpio 0 1>;

        ports {
            #address-cells = <1>;
            #size-cells = <0>;
            port@0 {
                reg = <0>;
                xlnx,video-format = /bits/ 16 <2>;
                xlnx,video-width = /bits/ 16 <8>;
                tpg_in: endpoint {
                    remote-endpoint = <&adv7611_out>;
                };
            };
            port@1 {
                reg = <1>;
                xlnx,video-format = /bits/ 16 <2>;
                xlnx,video-width = /bits/ 16 <8>;
                tpg1_out: endpoint {
                    remote-endpoint = <&switch_in0>;
                };
            };
        };
    };
