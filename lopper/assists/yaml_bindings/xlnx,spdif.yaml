# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
# %YAML 1.2
---
$id: http://devicetree.org/schemas/sound/xlnx,spdif.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Xilinx S/PDIF/AES3 Playback/Capture audio system

maintainers:
  - Katta Dhanunjanrao <katta.dhanunjanrao@amd.com>

description:
  IP SPDIF/AES3 cores are soft IP cores in AMD Vivado.
  The Sony/Philips Digital Interconnect Format (SPDIF) and AES3
  are digital audio interfaces that implements the IEC 60958 interface
  for transmitting and receiving audio data.
  

properties:
  compatible:
    items:
      - enum:
          - xlnx,spdif-2.0

  reg:
    minItems: 2

  interrupts:
    minItems: 1
    maxItems: 2

  interrupt-names:
    items:
      - const: irq

  clocks:
    description: List of phandles to audio clock and axi clock, axi stream clock.
    items:
      - description: Audio clock
      - description: Axi clock
      - description: Axi stream clock

  clock-names:
    items:
      - const: aud_clk_i
      - const: s_axi_aclk
      - const: s_axis_aclk

  clock-frequency:
    description: clock frequency

  xlnx,fifo-depth:
    description: sample data width 512..etc

  xlnx,chstatus-reg:
    description:  channel status reg val.
  
  xlnx,spdif-mode:
    description: Mode of spdif IP operation either playback or capture.

  xlnx,userdata-reg:
    description: user data reg val

  xlnx,snd-pcm:
    description: |
      Reference to audio formatter block. Add this if, audio formatter
      is going to be used for HDMI/DP/SDI audio pipelines. Needed only
      if "xlnx,audio-enabled" is included for HDMI/DP/SDI.
    $ref: /schemas/types.yaml#/definitions/phandle

required:
  - compatible
  - reg
  - clock-names
  - clocks
  - clock-frequency
  - xlnx,chstatus-reg
  - xlnx,fifo-depth
  - xlnx,spdif-mode
  - xlnx,userdata-reg
  - xlnx,snd-pcm

additionalProperties: false

examples:
  - |
   bus {
       audio_ss_spdif_tx: spdif@800a0000 {
           clock-frequency = <300000000>;
           clock-names = "aud_clk_i", "s_axi_aclk", "s_axis_aclk";
           reg = <0x0 0x800a0000 0x0 0x10000>;
           compatible = "xlnx,spdif-2.0", "xlnx,spdif-2.0";
           xlnx,chstatus-reg = <0>;
           xlnx,fifo-depth = <512>;
           xlnx,spdif-mode = <1>;
           xlnx,userdata-reg = <0>;
           clocks = <&misc_clk_0>, <&zynqmp_clk 71>, <&misc_clk_0>;
           xlnx,snd-pcm = <&audio_ss_0_audio_formatter_0>;
      };
      audio_ss_spdif_rx: spdif@80090000 {
          xlnx,chstatus-reg = <1>;
          xlnx,fifo-count = <0>;
          xlnx,cstatus-reg = <1>;
          compatible = "xlnx,spdif-2.0" , "xlnx,spdif-2.0";
          xlnx,c-userdata-reg = <1>;
          clock-frequency = <300000000>;
          reg = <0x0 0x80090000 0x0 0x10000>;
          clocks = <&misc_clk_0>, <&zynqmp_clk 71>, <&zynqmp_clk 71>;
          xlnx,userdata-reg = <1>;
          xlnx,fifo-depth = <512>;
          clock-names = "aud_clk_i" , "s_axi_aclk" , "m_axis_aclk";
          xlnx,spdif-mode = <0>;
     };
   };
...
